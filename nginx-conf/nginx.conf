upstream webapp {
    server webapp:8080;
}

server {
    listen 80;
    listen [::]:80;
    server_name ross.ch www.ross.ch;

    location ~ /.well-known/acme-challenge {
        allow all;
        root /var/www/html;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name ross.ch www.ross.ch

    server_tokens off;

    ssl_certificate /etc/letsencrypt/live/ross.ch/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/ross.ch/privkey.pem;


    # Improve HTTPS performance with session resumption
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    ssl_buffer_size 8k;

    ssl_dhparam /etc/ssl/certs/dhparam-2048.pem;

    ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;
    ssl_ecdh_curve secp384r1;

    ssl_session_tickets off;

    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/letsencrypt/live/ross.ch/fullchain.pem;
    resolver 1.1.1.1 1.0.0.1 [2606:4700:4700::1111] [2606:4700:4700::1001] valid=300s; # Cloudflare
    resolver_timeout 5s;

    add_header X-Frame-Options "DENY" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    location / {
        proxy_pass http://webapp;
        proxy_redirect off;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
    }

    root /var/www/html;
    index index.html index.htm index.nginx-debian.html;
}

# server {
#     listen 80;
#     listen [::]:80;
#     server_name mail.ross.ch www.mail.ross.ch;

#     location * {
#             proxy_pass http://mailu-front:8080;
#     }
# }

# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#     server_name mail.ross.ch www.mail.ross.ch

#     server_tokens off;

#     ssl_certificate /etc/letsencrypt/live/ross.ch/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/ross.ch/privkey.pem;

#     ssl_buffer_size 8k;

#     ssl_dhparam /etc/ssl/certs/dhparam-2048.pem;

#     ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
#     ssl_prefer_server_ciphers on;

#     ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

#     ssl_ecdh_curve secp384r1;
#     ssl_session_tickets off;

#     ssl_stapling on;
#     ssl_stapling_verify on;
#     resolver 1.1.1.1;

#     location * {
#         try_files $uri @mailu-front;
#     }

#     location @mailu-front{
#         proxy_pass http://mailu-front:8080;
#         add_header X-Frame-Options "SAMEORIGIN" always;
#         add_header X-XSS-Protection "1; mode=block" always;
#         add_header X-Content-Type-Options "nosniff" always;
#         add_header Referrer-Policy "no-referrer-when-downgrade" always;
#         add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;
#         # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
#         # enable strict transport security only if you understand the implications
#     }

#     root /var/www/html;
#     index index.html index.htm index.nginx-debian.html;
# }
